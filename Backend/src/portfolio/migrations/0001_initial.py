# Generated by Django 5.2.7 on 2025-10-09 01:06

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('media', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('public_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for public-facing operations', unique=True, verbose_name='Public ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active', verbose_name='Active Status')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('meta_title', models.CharField(blank=True, db_index=True, help_text='SEO title for search engines (max 70 characters)', max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, help_text='SEO description for search engines (max 300 characters)', max_length=300, null=True, verbose_name='Meta Description')),
                ('og_title', models.CharField(blank=True, help_text='Title for social media sharing', max_length=70, null=True, verbose_name='Open Graph Title')),
                ('og_description', models.CharField(blank=True, help_text='Description for social media sharing', max_length=300, null=True, verbose_name='Open Graph Description')),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('robots_meta', models.CharField(blank=True, default='index,follow', max_length=50, null=True)),
                ('structured_data', models.JSONField(blank=True, default=dict, null=True)),
                ('hreflang_data', models.JSONField(blank=True, default=dict, null=True)),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(db_index=True, max_length=30, unique=True)),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('image', models.ForeignKey(blank=True, limit_choices_to={'media_type': 'image'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='media.media', verbose_name='Main Image')),
                ('og_image', models.ForeignKey(blank=True, limit_choices_to={'media_type': 'image'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_og_images', to='media.media', verbose_name='Open Graph Image')),
            ],
            options={
                'verbose_name': 'Portfolio Category',
                'verbose_name_plural': 'Portfolio Categories',
                'db_table': 'portfolio_categories',
                'ordering': ['path'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('public_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for public-facing operations', unique=True, verbose_name='Public ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active', verbose_name='Active Status')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('meta_title', models.CharField(blank=True, db_index=True, help_text='SEO title for search engines (max 70 characters)', max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, help_text='SEO description for search engines (max 300 characters)', max_length=300, null=True, verbose_name='Meta Description')),
                ('og_title', models.CharField(blank=True, help_text='Title for social media sharing', max_length=70, null=True, verbose_name='Open Graph Title')),
                ('og_description', models.CharField(blank=True, help_text='Description for social media sharing', max_length=300, null=True, verbose_name='Open Graph Description')),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('robots_meta', models.CharField(blank=True, default='index,follow', max_length=50, null=True)),
                ('structured_data', models.JSONField(blank=True, default=dict, null=True)),
                ('hreflang_data', models.JSONField(blank=True, default=dict, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], db_index=True, default='draft', max_length=20)),
                ('title', models.CharField(db_index=True, max_length=60)),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('og_image', models.ForeignKey(blank=True, limit_choices_to={'media_type': 'image'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_og_images', to='media.media', verbose_name='Open Graph Image')),
                ('categories', models.ManyToManyField(blank=True, related_name='portfolio_categories', to='portfolio.portfoliocategory')),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolio',
                'db_table': 'portfolio_listings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioMedia',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('public_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for public-facing operations', unique=True, verbose_name='Public ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active', verbose_name='Active Status')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('is_main_image', models.BooleanField(default=False, help_text='Indicates whether this image is the Portfolio image for the property. Only one Portfolio Image is allowed per portfolio.', verbose_name='Portfolio Image')),
                ('order', models.PositiveIntegerField(default=0, help_text='The order of this media item in the portfolio.', verbose_name='Order')),
                ('media', models.ForeignKey(help_text='The media file associated with the portfolio.', on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_links', to='media.media', verbose_name='Media')),
                ('portfolio', models.ForeignKey(help_text='The portfolio to which this media belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='portfolio_medias', to='portfolio.portfolio', verbose_name='Portfolio')),
            ],
            options={
                'verbose_name': 'Portfolio Media',
                'verbose_name_plural': 'Portfolio Media',
                'db_table': 'portfolio_media',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='portfolio',
            name='medias',
            field=models.ManyToManyField(related_name='portfolio_medias', through='portfolio.PortfolioMedia', to='media.media'),
        ),
        migrations.CreateModel(
            name='PortfolioOption',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('public_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for public-facing operations', unique=True, verbose_name='Public ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active', verbose_name='Active Status')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('meta_title', models.CharField(blank=True, db_index=True, help_text='SEO title for search engines (max 70 characters)', max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, help_text='SEO description for search engines (max 300 characters)', max_length=300, null=True, verbose_name='Meta Description')),
                ('og_title', models.CharField(blank=True, help_text='Title for social media sharing', max_length=70, null=True, verbose_name='Open Graph Title')),
                ('og_description', models.CharField(blank=True, help_text='Description for social media sharing', max_length=300, null=True, verbose_name='Open Graph Description')),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('robots_meta', models.CharField(blank=True, default='index,follow', max_length=50, null=True)),
                ('structured_data', models.JSONField(blank=True, default=dict, null=True)),
                ('hreflang_data', models.JSONField(blank=True, default=dict, null=True)),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('og_image', models.ForeignKey(blank=True, limit_choices_to={'media_type': 'image'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_og_images', to='media.media', verbose_name='Open Graph Image')),
                ('portfolio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='portfolio_options', to='portfolio.portfolio')),
            ],
            options={
                'verbose_name': 'Portfolio Option',
                'verbose_name_plural': 'Portfolio Options',
                'db_table': 'portfolio_options',
            },
        ),
        migrations.CreateModel(
            name='PortfolioTag',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('public_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text='Unique identifier for public-facing operations', unique=True, verbose_name='Public ID')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this record should be treated as active', verbose_name='Active Status')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('meta_title', models.CharField(blank=True, db_index=True, help_text='SEO title for search engines (max 70 characters)', max_length=70, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(blank=True, help_text='SEO description for search engines (max 300 characters)', max_length=300, null=True, verbose_name='Meta Description')),
                ('og_title', models.CharField(blank=True, help_text='Title for social media sharing', max_length=70, null=True, verbose_name='Open Graph Title')),
                ('og_description', models.CharField(blank=True, help_text='Description for social media sharing', max_length=300, null=True, verbose_name='Open Graph Description')),
                ('canonical_url', models.URLField(blank=True, null=True)),
                ('robots_meta', models.CharField(blank=True, default='index,follow', max_length=50, null=True)),
                ('structured_data', models.JSONField(blank=True, default=dict, null=True)),
                ('hreflang_data', models.JSONField(blank=True, default=dict, null=True)),
                ('name', models.CharField(db_index=True, max_length=20, unique=True)),
                ('slug', models.SlugField(max_length=60, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(db_index=True, default=True)),
                ('og_image', models.ForeignKey(blank=True, limit_choices_to={'media_type': 'image'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_og_images', to='media.media', verbose_name='Open Graph Image')),
            ],
            options={
                'verbose_name': 'Portfolio Tag',
                'verbose_name_plural': 'Portfolio Tags',
                'db_table': 'portfolio_tags',
            },
        ),
        migrations.AddField(
            model_name='portfolio',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='portfolio_tags', to='portfolio.portfoliotag'),
        ),
        migrations.AddIndex(
            model_name='portfoliocategory',
            index=models.Index(fields=['path'], name='portfolio_c_path_51400e_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliocategory',
            index=models.Index(fields=['depth'], name='portfolio_c_depth_b06ae1_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliocategory',
            index=models.Index(fields=['name'], name='portfolio_c_name_f8c29a_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliocategory',
            index=models.Index(fields=['slug'], name='portfolio_c_slug_e26007_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliocategory',
            index=models.Index(fields=['public_id'], name='portfolio_c_public__3c181f_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliocategory',
            index=models.Index(fields=['is_public'], name='portfolio_c_is_publ_c4cf1f_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliocategory',
            index=models.Index(fields=['meta_title'], name='portfolio_c_meta_ti_8322ae_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliomedia',
            index=models.Index(fields=['portfolio'], name='portfolio_m_portfol_8cc83d_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliomedia',
            index=models.Index(fields=['media'], name='portfolio_m_media_i_06f39a_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliomedia',
            index=models.Index(fields=['is_main_image'], name='portfolio_m_is_main_505f20_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliomedia',
            index=models.Index(fields=['public_id'], name='portfolio_m_public__51d7b6_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliooption',
            index=models.Index(fields=['name'], name='portfolio_o_name_064e09_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliooption',
            index=models.Index(fields=['slug'], name='portfolio_o_slug_610bd7_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliooption',
            index=models.Index(fields=['public_id'], name='portfolio_o_public__788b62_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliooption',
            index=models.Index(fields=['is_public'], name='portfolio_o_is_publ_079a0a_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliooption',
            index=models.Index(fields=['meta_title'], name='portfolio_o_meta_ti_5465f9_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliotag',
            index=models.Index(fields=['name'], name='portfolio_t_name_d5a699_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliotag',
            index=models.Index(fields=['slug'], name='portfolio_t_slug_d5dd1e_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliotag',
            index=models.Index(fields=['public_id'], name='portfolio_t_public__9acb2a_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliotag',
            index=models.Index(fields=['is_public'], name='portfolio_t_is_publ_6565df_idx'),
        ),
        migrations.AddIndex(
            model_name='portfoliotag',
            index=models.Index(fields=['meta_title'], name='portfolio_t_meta_ti_878534_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['status', 'is_public'], name='portfolio_l_status_d0b4a4_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['title'], name='portfolio_l_title_375942_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['slug'], name='portfolio_l_slug_7d8eaf_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['public_id'], name='portfolio_l_public__928d3d_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['is_featured', 'status'], name='portfolio_l_is_feat_f033e6_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['created_at'], name='portfolio_l_created_8fae84_idx'),
        ),
        migrations.AddIndex(
            model_name='portfolio',
            index=models.Index(fields=['meta_title'], name='portfolio_l_meta_ti_951c2f_idx'),
        ),
    ]
